{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/userForm.js","components/auth/LoginForm.jsx","components/auth/RegisterForm.jsx","components/auth/PassForgotForm.jsx","components/ui/NavBar.jsx","MainScreen.jsx","components/calendar/CalendarEvent.jsx","helpers/calendar-messages-es.js","actions/ui.js","components/calendar/CalendarModal.jsx","components/ui/AddNewFab.jsx","components/ui/DeleteEventFab.jsx","components/calendar/CalendarScreen.jsx","routers/PrivateRoute.jsx","routers/PublicRoute.jsx","routers/AppRouter.jsx","CalendarApp.jsx","index.js"],"names":["types","initialState","checking","loginVisible","RegisterVisible","PassForgotVisible","modalOpen","loading","events","activeEvent","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","undefined","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","startLogout","dispatch","clear","logout","startShowLogin","showLoginForm","startShowRegister","showRegisterForm","startHideLogin","startHideRegister","login","user","checkingFinish","valVisible","showPassForgotForm","useForm","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","LoginForm","useDispatch","Email","Password","formValues","handleHideLogin","className","onClick","onSubmit","email","password","preventDefault","a","resp","json","ok","msg","uid","setItem","Date","getTime","Swal","fire","autoComplete","placeholder","onChange","RegisterForm","Name","Password1","Password2","handleHideRegister","userName","PassForgotForm","handleHidePassForgot","alert","startPassRecovery","NavBar","useSelector","MainScreen","src","alt","CalendarEvent","title","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","uiOpenModal","Modal","setAppElement","customStyles","content","top","left","right","bottom","marginRight","transform","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","startDate","setStartDate","endDate","setEndDate","validTitle","setValidTitle","validEndDate","setValidEndDate","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","_ud","eventStartAddNew","minDate","onFocus","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","_id","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","redirectTo","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ce69cc3.chunk.js","sourcesContent":["\n\nexport const types = {\n\n    authcheckingFinish: '[auth] Finish checking login state',\n    authStartLogin: '[auth] Start login',\n    authlogin: '[auth] Login',\n    authStartRegister: '[auth] Start register',\n    authStartTokenRenew: '[auth] Start token renew',\n    authlogout: '[auth] Logout',\n    authShowLogin: '[auth] Show Login form',\n    authShowRegister: '[auth] Show Register form',\n    authShowPassForgot: '[auth] Show Password Forgot form',\n    \n\n    uiOpenModal: '[UI] Open modal',\n    uiCloseModal: '[UI] Close modal',\n    uiStartLoading: '[UI] Start loading',\n    uiFinishLoading: '[UI] Finish loading',\n\n\n    eventSetActive: '[event] Set active',\n    eventStartAddNew: '[event Start add new',\n    eventAddNew: '[event] Add New',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n    eventLoaded: '[event] Loaded events',\n    eventLogout: '[event] Lougout event',\n\n\n}","import { types } from '../types/types';\n\nconst initialState = {\n    checking: true,\n    loginVisible: false,\n    RegisterVisible: false,\n    PassForgotVisible: false\n\n    // uid: null,\n    // name: null\n\n}\nexport const authReducer = ( state = initialState, action ) => {\n\n    \n    switch (action.type) {\n        case types.authlogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: false\n            }\n\n        case types.authcheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n\n        case types.authlogout:\n            return {\n                state: undefined,\n             }\n\n        case types.authShowLogin:\n            return {\n                ...state,\n                loginVisible: action.payload\n            }\n        \n        case types.authShowRegister:\n            return {\n                ...state,\n                RegisterVisible: action.payload\n            }\n        \n            case types.authShowPassForgot:\n            return {\n                ...state,\n                PassForgotVisible: action.payload\n            }\n    \n        default:\n            return state;\n    }\n\n}","import { types } from \"../types/types\";\n\n\nconst initialState = {\n    modalOpen: false,\n    loading: false,\n}\n\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch (action.type) {\n\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n\n        case types.uiStartLoading:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case types.uiFinishLoading:\n            return {\n                ...state,\n                loading: false\n            }\n                \n        default:\n            return state;\n    }\n\n}","import { types } from '../types/types';\n\n\nconst initialState = {\n    events: [],\n    activeEvent: null\n}\n\n\nexport const calendarReducer = ( state = initialState, action ) => {\n\n    switch (action.type) {\n        \n        case  types.eventAddNew :\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }  \n            \n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: {\n                    ...action.payload\n                }\n            }\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => (e.id === action.payload.id) ? action.payload : e\n                )\n            };\n\n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => (e.id !== state.activeEvent.id)\n                    ),\n                activeEvent: null\n            }\n\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [...action.payload]\n            }\n\n        case types.eventLogout:\n            return {\n                ...initialState\n            }\n    \n        default:\n            return state;\n    }\n\n}\n","import { combineReducers } from 'redux';\nimport { authReducer } from './authReducer';\nimport { uiReducer } from './uiReducer';\nimport { calendarReducer } from './calendarReducer';\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer,\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { rootReducer } from '../reducers/rootReducer';\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);","\n\nconst baseUrl = process.env.REACT_APP_API_URL;\n\n\nconst fetchWithoutToken = (endpoint, data, method = 'GET') => {\n\n    const url = `${baseUrl}/${endpoint}`; \n\n    if (method === 'GET') {\n        return fetch(url);\n    } else {\n        return fetch(url, {\n            method,\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(data),\n        });\n    }\n}\n\n\nconst fetchWithToken = (endpoint, data, method = 'GET') => {\n\n    const url = `${baseUrl}/${endpoint}`;\n    const token = localStorage.getItem('token');\n\n    if (method === 'GET') {\n        return fetch(url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    } else {\n        return fetch(url, {\n            method,\n            headers: {\n                'content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify(data),\n        });\n    }\n}\n\n\nexport {\n    fetchWithoutToken,\n    fetchWithToken\n}","import moment from \"moment\";\n\n\nexport const prepareEvents = (events = []) => {\n\n    return events.map(\n        (e) => ({\n            ...e,\n            end: moment(e.end).toDate(),\n            start: moment(e.start).toDate()\n        })\n    );\n}","import Swal from 'sweetalert2';\nimport { fetchWithToken } from '../helpers/fetch';\nimport { prepareEvents } from '../helpers/prepareEvents';\nimport { types } from '../types/types';\n\n\n\nexport const eventStartAddNew = (event) => {\n    \n    return async (dispatch, getState) => {\n\n        const {uid, name} = getState().auth;\n\n        try {\n            const resp = await fetchWithToken('events', event, 'POST' );\n            const body = await resp.json();\n        \n            if (body.ok) {\n                event.id = body.event.id;\n                event.user = {\n                    _ud: uid,\n                    name\n                }\n                dispatch(eventAddNew(event));\n            }\n            \n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\n\nexport const eventClearActiveEvent = () => ({ \n    type: types.eventClearActiveEvent \n});\n\n\nexport const eventStartUpdate = (event) => {\n\n    return async (dispatch) => {\n        \n        try {\n            const resp = await fetchWithToken(`events/${event.id}`, event, 'PUT');\n            const body = await resp.json();\n            \n            if(body.ok) {\n                \n                dispatch(eventUpdated(event));\n\n            } else {\n                Swal.fire('Advertencia', body.msg, 'warning');\n                console.log(body.msg);\n            }\n            \n        } catch (error) {\n            console.log(error);\n        }        \n    }\n}\n\n\nconst eventUpdated = (event) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\n\nexport const eventStartDelete = (event) => {\n\n    return async (dispatch, getState) => {\n\n        const {id} = getState().calendar.activeEvent;\n        \n        try {\n\n            const resp = await fetchWithToken(`events/${id}`, {} , 'DELETE');\n            const body = await resp.json();\n            \n            if(body.ok) {\n                \n                dispatch(eventDeleted());\n\n            } else {\n                Swal.fire('Advertencia', body.msg, 'warning');\n                console.log(body.msg);\n            }\n            \n        } catch (error) {\n            console.log(error);\n        }        \n    }\n}\n\n\nexport const eventDeleted = () => ({\n    type: types.eventDeleted,\n});\n\n\nexport const eventStartLoading = () => {\n\n    return async (dispatch) => {\n\n        try {\n            const resp = await fetchWithToken('events');\n            const body = await resp.json();\n            const events = prepareEvents(body.events);\n\n             dispatch(eventLoaded(events));\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n} \n\n\nconst eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events\n}) \n\n\nexport const eventLogout = () => ({\n    type: types.eventLogout,\n}) ","import Swal from 'sweetalert2';\nimport { types } from '../types/types';\nimport { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\"\nimport { eventLogout } from './events';\n\n\nexport const startLogin = (email, password) => { \n\n    return async (dispatch) => {\n        \n        const resp = await fetchWithoutToken('auth', {email, password}, 'POST');\n        const {ok, msg, token, uid, name} = await resp.json();\n\n        if (ok) {\n            localStorage.setItem('token', token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n\n            dispatch(login({\n                uid,\n                name\n            }));\n\n        } else {\n            Swal.fire('Error', msg, 'error');\n        }\n    }\n}\n\n\nexport const startRegister = (name, email, password) => {\n\n    return async (dispatch) => {\n        \n        const resp = await fetchWithoutToken('auth/new', {name, email, password}, 'POST');\n        const {ok, msg, token, uid, name: userName} = await resp.json();\n\n\n        if (ok) {\n            localStorage.setItem('token', token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n\n            dispatch(login({\n                uid,\n                userName\n            }));\n\n        } else {\n            Swal.fire('Error', msg, 'error');\n        }\n    }\n}\n\n\nexport const startPassRecovery = (email) => {\n\n    \n}\n\n\nexport const startChecking = () => {\n    \n    return async (dispatch) => {\n        \n        if ('token' in localStorage) {\n        \n            const resp = await fetchWithToken('auth/renew');\n            const {ok, token, uid, name} = await resp.json();\n    \n            if (ok) {\n                localStorage.setItem('token', token);\n                localStorage.setItem('token-init-date', new Date().getTime());\n    \n                dispatch(login({\n                    uid,\n                    name\n                }));\n    \n            } else {\n                dispatch(checkingFinish());\n            }\n        }\n    }\n}\n\n\nexport const startLogout = () => {\n    return (dispatch) =>{\n        localStorage.clear();\n        dispatch(logout());\n        dispatch(eventLogout())\n    }\n}\n\n\nexport const startShowLogin = () => {\n    return (dispatch) => {\n        dispatch(showLoginForm(true));\n    }\n}\n\n\nexport const startShowRegister = () => {\n    return (dispatch) => {\n        dispatch(showRegisterForm(true));\n    }\n}\n\n\nexport const startShowPassForgot = () => {\n    return (dispatch) => {\n        dispatch(showPassForgotForm(true));\n    }\n}\n\n\nexport const startHideLogin = () => {\n    return (dispatch) => {\n        dispatch(showLoginForm(false));\n    }\n}\n\n\nexport const startHideRegister = () => {\n    return (dispatch) => {\n        dispatch(showRegisterForm(false));\n    }\n}\n\n\nexport const startHidePassForgot = () => {\n    return (dispatch) => {\n        dispatch(showPassForgotForm(false));\n    }\n}\n\n\nconst login = (user) => ({\n    type: types.authlogin,\n    payload: user\n})\n\n\nconst checkingFinish = () => ({\n    type: types.authcheckingFinish\n})\n\n\nconst logout = () => ({\n    type: types.authlogout\n})\n\nconst showLoginForm = (valVisible) => ({\n    type: types.authShowLogin,\n    payload: valVisible\n})\n\nconst showRegisterForm = (valVisible) => ({\n    type: types.authShowRegister,\n    payload: valVisible\n})\n\nconst showPassForgotForm = (valVisible) => ({\n    type: types.authShowPassForgot,\n    payload: valVisible\n})","import { useState } from \"react\";\n\n\nexport const useForm = (initialState = {}) => {\n\n    const [values, setValues] = useState(initialState);\n\n    const reset = (newFormState = initialState) => {\n        setValues(newFormState);\n    }\n\n    const handleInputChange = ({ target }) => {\n        setValues({\n            ...values,\n            [target.name]: target.value\n        });\n    }\n\n    return [values, handleInputChange, reset];\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { startHideLogin, startLogin, startShowPassForgot, startShowRegister } from '../../actions/auth';\nimport { useForm } from '../../hooks/userForm';\nimport './styles.css';\n\nexport const LoginForm = () => {\n\n    const dispatch = useDispatch();\n    \n    const [formValues, handleInputChange] = useForm({\n        Email: '',\n        Password: ''\n    });\n    \n    const {Email, Password} = formValues;\n    \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        dispatch(startLogin(Email, Password));\n    }\n\n    const handleHideLogin = () => {\n        dispatch(startHideLogin());\n    }\n\n    const handleShowRegister = () => {\n        dispatch(startShowRegister());\n        handleHideLogin();\n    }\n\n    const handleShowPasswordForgot = () => {\n        dispatch(startShowPassForgot());\n        handleHideLogin();\n    }\n    \n\n    return (\n        <div className=\"login-form bg-dark animate__animated animate__fadeIn\">\n            <button className=\"btn close\" onClick={handleHideLogin}>\n                <i className='far fa-times-circle'></i>\n            </button> \n            <h3 className=\"pb-3\">Ingreso</h3>\n            <form onSubmit={handleSubmit} autoComplete=\"off\">\n                <div className=\"form-group\">\n                    <input \n                        type=\"text\"\n                        className=\"form-control col-form-label-sm\"\n                        placeholder=\"Correo\"\n                        name=\"Email\"\n                        value= {Email}\n                        onChange={handleInputChange}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        className=\"form-control col-form-label-sm\"\n                        placeholder=\"Contraseña\"\n                        autoComplete=\"new-password\"\n                        name=\"Password\"\n                        value={Password}\n                        onChange={handleInputChange}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input \n                        type=\"submit\"\n                        className=\"btn btn-sm btn-outline-info btnSubmit\"\n                        value=\"Login\" \n                    />\n                </div>\n                <div className=\"goto-right\" onClick={handleShowPasswordForgot}>\n                    <small className=\"text-info\">¿Olvido su contraseña?</small>\n                </div>\n                <div className=\"goto-right\" onClick={handleShowRegister}>\n                    <small className=\"text-info\">¿No tienes cuenta?</small>\n                </div>\n            </form>\n        </div>\n    )\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startHideRegister, startRegister, startShowLogin } from '../../actions/auth';\nimport { useForm } from '../../hooks/userForm';\nimport './styles.css';\n\nexport const RegisterForm = () => {\n\n    const dispatch = useDispatch();\n\n    const [formValues, handleInputChange] = useForm({\n        Name: '',\n        Email: '',\n        Password1: '',\n        Password2: ''\n    });\n\n    const {Name, Email, Password1, Password2} = formValues;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (Password1 !== Password2) {\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error')\n        }\n        dispatch(startRegister(Name, Email, Password1));\n    }\n\n    const handleHideRegister = () => {\n        dispatch(startHideRegister());\n    }\n\n    const handleShowLogin = () => {\n        handleHideRegister();\n        dispatch(startShowLogin());\n    }\n    \n\n    return (\n        <div className=\"register-form bg-dark animate__animated animate__fadeIn\">\n            <button className=\"btn close\" onClick={handleHideRegister}>\n                <i className='far fa-times-circle'></i>\n            </button> \n            <h3>Registro</h3>\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Nombre\"\n                        name=\"Name\"\n                        value={Name}\n                        onChange={handleInputChange}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"email\"\n                        className=\"form-control\"\n                        placeholder=\"Correo\"\n                        name=\"Email\"\n                        value={Email}\n                        onChange={handleInputChange}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        className=\"form-control\"\n                        placeholder=\"Contraseña\"\n                        name=\"Password1\"\n                        value={Password1}\n                        onChange={handleInputChange} \n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        className=\"form-control\"\n                        placeholder=\"Repita la contraseña\" \n                        name=\"Password2\"\n                        value={Password2}\n                        onChange={handleInputChange}\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <input \n                        type=\"submit\" \n                        className=\"btn btn-sm btn-outline-info btnSubmit\" \n                        value=\"Crear cuenta\" />\n                </div>\n\n                <div className=\"goto-right\" onClick={handleShowLogin}>\n                    <small className=\"text-info\">¿Ya esta registrado?</small>\n                </div>\n            </form>\n        </div>\n    )\n}","import React from 'react';\nimport { startHidePassForgot, startPassRecovery } from '../../actions/auth';\nimport { useDispatch } from 'react-redux';\nimport { useForm } from '../../hooks/userForm';\nimport './styles.css';\n\nexport const PassForgotForm = () => {\n\n    const dispatch = useDispatch();\n\n    const [formValues, handleInputChange] = useForm({\n        Email: '',\n    });\n\n    const {Email} = formValues;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        alert(`Enviando para recuperar contraseña de usuario: ${Email}`)\n        handleHidePassForgot();\n        dispatch(startPassRecovery(Email));\n    }\n\n    const handleHidePassForgot = () => {\n        dispatch(startHidePassForgot());\n    }\n    \n\n    return (\n        <div className=\"register-form bg-dark animate__animated animate__fadeIn\">\n            <button className=\"btn close\" onClick={handleHidePassForgot}>\n                <i className='far fa-times-circle'></i>\n            </button> \n            <h5>Recuperar Contraseña</h5>\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <input\n                        type=\"email\"\n                        className=\"form-control\"\n                        placeholder=\"Correo\"\n                        name=\"Email\"\n                        value={Email}\n                        onChange={handleInputChange}\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <input \n                        type=\"submit\" \n                        className=\"btn btn-sm btn-outline-info btnSubmit\" \n                        value=\"Enviar\" />\n                </div>\n            </form>\n        </div>\n    )\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startHideLogin, startHideRegister, startLogout, startShowLogin, startShowRegister } from '../../actions/auth';\nimport './styles.css';\n\n\n\nexport const NavBar = () => {\n\n    const dispatch = useDispatch();\n    \n    const handleLogout = () => {\n        dispatch(startLogout());\n    }\n\n    const handleShowLogin = () => {\n        dispatch(startShowLogin());\n        dispatch(startHideRegister());\n    }\n\n    const handleShowRegister = () => {\n        dispatch(startShowRegister());\n        dispatch(startHideLogin());\n    }\n\n    const {name} = useSelector(state => state.auth);\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark navbar-container\">\n            <span className=\"navbar-brand user-name\">\n                 {(name) ? name : 'Bienvenido'}\n            </span>\n\n            { (name) ?  <div className=\"navbar-buttons\">\n                            <button className=\"btn btn-sm btn-outline-danger mr-5\" onClick={handleLogout}>\n                                <i className='fas fa-sign-out-alt '></i>\n                                <span> Salir</span>\n                            </button>\n                        </div>\n                     :\n                        <div className=\"navbar-buttons\">\n                            <button className=\"btn btn-sm btn-outline-info mr-3\" onClick={handleShowLogin}>\n                                <i className='fas fa-sign-in-alt '></i>\n                                <span> Ingresar </span>\n                            </button>            \n                            <button className=\"btn btn-sm btn-outline-info mr-3\" onClick={handleShowRegister}>\n                                <i className='fas fa-user-plus '></i>\n                                <span> Registrarse</span>\n                            </button>\n                        </div>\n            }    \n        </div>\n    )\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { LoginForm } from './components/auth/LoginForm';\nimport { RegisterForm } from './components/auth/RegisterForm';\nimport { PassForgotForm } from './components/auth/PassForgotForm'\nimport { NavBar } from './components/ui/NavBar';\n\nexport const MainScreen = () => {\n\n    const {loginVisible, RegisterVisible, PassForgotVisible} = useSelector(state => state.auth)\n\n    return  <>\n                <div className=\"body-container\">\n                    <img src=\"background.png\" alt=\"\"/>\n                </div>\n\n                <div className=\"header-container\">\n                    <NavBar />\n                    {(loginVisible) && <LoginForm/>}\n                    {(RegisterVisible) && <RegisterForm/>}\n                    {(PassForgotVisible) && <PassForgotForm/>}\n                </div>\n                \n                <div className=\"container\">\n                    <h1 className=\"pt-5\">Calendar App</h1>\n                    <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Dolore nobis quibusdam, quam nulla animi hic! Mollitia, aut quam? Tempora numquam odio optio accusamus sapiente aperiam cupiditate incidunt vitae deleniti velit.</p>\n                </div>\n            </>\n}","import React from 'react'\n\nexport const CalendarEvent = ({event}) => {\n\n    const {title, user} = event;\n\n    return (\n        <div>\n            <strong>{title}</strong>\n            <span> - {user.name}</span>\n        </div>\n    )\n}\n","\n\nexport const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`,\n};","import { types } from \"../types/types\";\n\n\nexport const uiOpenModal = () => ({\n    type: types.uiOpenModal\n})\n\nexport const uiCloseModal = () => ({\n    type: types.uiCloseModal\n})\n\nexport const uiStartLoading = () => ({\n    type: types.uiStartLoading\n})\n\n\nexport const uiFinishLoading = () => ({\n    type: types.uiFinishLoading\n})","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport moment from 'moment';\n\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\n\n\nModal.setAppElement('#root');\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n};\n\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlus1.toDate()\n}\n\nexport const CalendarModal = () => {\n\n    const {modalOpen} = useSelector(state => state.ui);\n    const {activeEvent} = useSelector(state => state.calendar);\n    const dispatch = useDispatch();\n\n    const [startDate, setStartDate] = useState(now.toDate());\n    const [endDate, setEndDate] = useState(nowPlus1.toDate());\n    const [validTitle, setValidTitle] = useState(true);\n    const [validEndDate, setValidEndDate] = useState(true);\n    \n    const [formValues, setFormValues] = useState(initEvent);\n    const {notes, title, start, end} = formValues;\n\n    useEffect(() => {\n        if ( activeEvent ) {\n            setFormValues(activeEvent) ;\n        } else {\n            setFormValues(initEvent);\n        }\n    }, [activeEvent, setFormValues])\n\n    const handleInputChange = ({target}) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n    const handleStartDateChange = (e) => {\n        setStartDate(e);\n        setFormValues({\n            ...formValues,\n            start: e\n        })\n    }\n\n    const handleEndDateChange = (e) => {\n        setEndDate(e);\n        setFormValues({\n            ...formValues,\n            end: e\n        })\n    }\n\n    const handleTitleInputFocus = () => {\n        setValidTitle(true);\n    }\n\n    const handleEndDateInputFocus = () => {\n        setValidEndDate(true);\n    }\n\n    const closeModal = () => {\n        dispatch(uiCloseModal());\n        dispatch(eventClearActiveEvent() );  //Limpia el evento activo\n        setFormValues(initEvent);\n    }\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n\n        const momentStart = moment(start);\n        const momentEnd = moment(end);\n\n        if (momentStart.isSameOrAfter(momentEnd)) {\n            setValidEndDate(false);\n        }\n        \n        if (title.trim().length < 2 ) {\n            setValidTitle(false);\n        }\n\n        // TODO Realizar guardar datos en bd\n        if (activeEvent) {\n            dispatch(eventStartUpdate(formValues));\n        } else {\n            dispatch(eventStartAddNew(formValues));\n        }\n\n        setValidTitle(true);\n        closeModal();\n        \n    }\n\n\n    return (\n        <Modal\n          isOpen={modalOpen}\n          onRequestClose={closeModal}\n          style={customStyles}\n          closeTimeoutMS= {200}\n          className= 'modal'\n          overlayClassName= 'modal-fondo'\n        >\n            <h4> {(activeEvent) ?' Editar Evento' : 'Nuevo evento'} </h4>\n            <hr />\n            <form className=\"modal-container\" onSubmit={handleSubmitForm}>\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={handleStartDateChange}\n                        value={startDate}\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={handleEndDateChange}\n                        value={endDate}\n                        minDate={startDate}\n                        className={`form-control ${!validEndDate && 'is-invalid'}`}\n                        onFocus= {handleEndDateInputFocus}\n                        id=\"validEndDate\"\n                    />\n                    <div id=\"validEndDate\" className=\"invalid-feedback\">\n                        La fecha y hora fin debe ser mayor a la fecha y hora inicio.\n                    </div>\n                </div>\n                {validEndDate && <hr />}\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input \n                        type=\"text\" \n                        className={`form-control ${!validTitle && 'is-invalid'}`}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value= {title}\n                        onChange={handleInputChange}\n                        onFocus= {handleTitleInputFocus}\n                        // id=\"validTitle\"\n                    />\n                    <small id=\"validTitle\" className=\"invalid-feedback\">\n                        Por favor indique una descripcion corta al titulo del evento.\n                    </small>\n                    { validTitle && <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>}\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea \n                        type=\"text\" \n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={notes}\n                        onChange={handleInputChange}\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n            </form>\n        </Modal>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { eventClearActiveEvent } from '../../actions/events';\nimport { uiOpenModal } from '../../actions/ui';\n\n\nexport const AddNewFab = () => {\n    \n    const dispatch = useDispatch();\n    \n    \n    const handleBtnAddNewClick = () => {\n        dispatch(eventClearActiveEvent());\n        dispatch(uiOpenModal());\n    }\n\n\n    return (\n        <button className=\"btn btn-primary fab\" onClick={handleBtnAddNewClick} >\n           <div className=\"fnab\">\n               <i className=\"fas fa-calendar-plus\"></i>\n           </div>\n        </button>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { eventStartDelete } from '../../actions/events';\n\n\nexport const DeleteEventFab = () => {\n    \n    const dispatch = useDispatch();\n    \n    const handleBtnDeleteClick = () => {\n        dispatch(eventStartDelete());\n    };\n\n    \n    return (\n        <button className=\"btn btn-danger fab-danger\" onClick={handleBtnDeleteClick} >\n           <div className=\"fnab\">\n               <i className=\"fas fa-trash\"></i>\n               <span> Eliminar Evento</span>\n           </div>\n        </button>\n    )\n}\n","import React, { useEffect, useState } from 'react'\n\nimport moment from 'moment';\nimport 'moment/locale/es';\n\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nimport { CalendarEvent } from './CalendarEvent';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { CalendarModal } from './CalendarModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\nimport { NavBar } from '../ui/NavBar';\n\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment); // or globalizeLocalizer\n        \nexport const CalendarScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const {events, activeEvent} = useSelector(state => state.calendar);\n    const {uid} = useSelector(state => state.auth);\n    \n    const [lastView, setLastView] = useState(localStorage.getItem('lastview') || 'month')\n\n    useEffect(() => {\n        dispatch(eventStartLoading());\n    }, [dispatch])\n\n    const onDoubleClick = (e) => {\n        dispatch(uiOpenModal());\n    }\n\n    const onSelectEvent = (e) => {\n        dispatch(eventSetActive(e));\n    }\n\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem('lastview', e);\n    }\n\n    const onSelectSlot = (e) => {\n        dispatch(eventClearActiveEvent());\n    }\n\n    const eventPropGetter = ( event, start, end, isSelected ) => {\n        const style = {\n            backgroundColor: (isSelected) ? '#c94c4c' :((uid === event.user._id) ? '#50394c' : '#c1502e'),\n            borderRadius: '0px',\n            opacity:(isSelected) ? 1 : 0.75,\n            display: 'block',\n            color: 'white'\n        }\n\n        return {\n            style\n        }\n    };\n\n\n    return (\n        <div>\n            <NavBar />\n            <Calendar\n                localizer={localizer}\n                events={events}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages= {messages}\n                eventPropGetter={eventPropGetter}\n                onDoubleClickEvent= {onDoubleClick}\n                onSelectEvent= {onSelectEvent}\n                onView= {onViewChange}\n                onSelectSlot={onSelectSlot}\n                selectable={true}\n                view= {lastView}\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n\n            <AddNewFab />\n            {\n                (!!activeEvent) && <DeleteEventFab />\n            }\n            <CalendarModal />\n        </div>\n    )\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    redirectTo,\n    ...rest\n}) => {\n\n    return (\n        <Route {...rest}\n            component={(props) => (\n                (isAuthenticated)\n                    ? <Component {...props} />\n                    : <Redirect to= {redirectTo} />\n            )}\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired,\n    redirectTo: PropTypes.string.isRequired\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    redirectTo,\n    ...rest\n}) => {\n\n    return (\n        <Route {...rest}\n            component={(props) => (\n                (isAuthenticated)\n                    ? <Redirect to= {redirectTo} />\n                    : <Component {...props} />\n            )}\n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired,\n    redirectTo: PropTypes.string.isRequired\n}\n","import React, {useEffect}  from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Redirect\n} from 'react-router-dom';\nimport { startChecking } from '../actions/auth';\nimport { MainScreen } from '../MainScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n    // const {checking, uid} = useSelector(state => state.auth);\n    const {uid} = useSelector(state => state.auth);\n    \n\n    useEffect(() => {\n        dispatch(startChecking());\n    }, [dispatch])\n\n    // if (checking) {\n    //     return (<h5>Espere...</h5>)\n    // }\n    \n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute\n                        exact\n                        path=\"/login\" \n                        component= {MainScreen}\n                        isAuthenticated={!!uid}\n                        redirectTo= \"/\"\n                    />\n                    <PrivateRoute\n                        exact\n                        path=\"/\"\n                        component= {CalendarScreen}\n                        isAuthenticated={!!uid}\n                        redirectTo=\"/login\"\n                    />\n\n                    <Redirect to=\"/\"/>\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React from 'react'\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport { AppRouter } from './routers/AppRouter';\n\n\nexport const CalendarApp = () => {\n    return (\n        <div className=\"calendar-screen\">\n            <Provider store={store}>\n                <AppRouter/>\n            </Provider>\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css'\n\n\nReactDOM.render(\n    <CalendarApp />,\n    document.getElementById('root')\n);"],"sourceRoot":""}